/* this determines how the width and height of a box are calculated. Normally, the width/height and min/max properties only include the content of the box, border and padding are not accounted for. Using the box-sizing: border-box; declaration, we tell the browser that we what the width/height and min/max properties to include the content, padding, and border. Notice we use the '*' selector, which sets this property on all elements. */
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.box {
  color: white;
  font-size: 40px;
  text-align: center;
  padding: 10px;
}

.box1 { background:#1abc9c;}
.box2 { background:#3498db;}
.box3 { background:#9b59b6;}
.box4 { background:#34495e;}
.box5 { background:#f1c40f;}
.box6 { background:#e67e22;}
.box7 { background:#e74c3c;}
.box8 { background:#bdc3c7;}
.box9 { background:#2ecc71;}
.box10 { background:#16a085;}

/* This is our flex container. */
.container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 10px solid black;
  height: 90vh;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.box {
  /* Sets the desired width for all the boxes. Will need to set |flex-wrap: wrap| on the parent flex-container in order to see this in action if there are too many boxes on the main axis. */
  -ms-flex-preferred-size: 250px;
  flex-basis: 250px;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;

}

.box1 {
  -ms-flex-preferred-size: 200px;
  flex-basis: 200px;
}

.box2 {
  -webkit-box-flex: 10;
  -ms-flex-positive: 10;
  flex-grow: 10;
}

.box3 {
  -ms-flex-preferred-size: 300px;
  flex-basis: 300px;
  -webkit-box-flex: 5;
  -ms-flex-positive: 5;
  flex-grow: 5;
}

.box4 {
  -webkit-box-flex: 1;
  -ms-flex: 1 4 500px;
  flex: 1 4 500px;
}