/* this determines how the width and height of a box are calculated. Normally, the width/height and min/max properties only include the content of the box, border and padding are not accounted for. Using the box-sizing: border-box; declaration, we tell the browser that we what the width/height and min/max properties to include the content, padding, and border. Notice we use the '*' selector, which sets this property on all elements. */
* {
  box-sizing: border-box;
}

.box {
  color: white;
  font-size: 40px;
  text-align: center;
  padding: 10px;
}

.box1 { background:#1abc9c;}
.box2 { background:#3498db;}
.box3 { background:#9b59b6;}
.box4 { background:#34495e;}
.box5 { background:#f1c40f;}
.box6 { background:#e67e22;}
.box7 { background:#e74c3c;}
.box8 { background:#bdc3c7;}
.box9 { background:#2ecc71;}
.box10 { background:#16a085;}

/* This is our flex container. */
.container {
  display: flex;
  border: 10px solid black;
  height: 90vh;
  /* Will align all items in the container, can use align-self to pull individual items out of this alignment. */
  align-items: flex-start;
}

.box {
  width: 33.33333%;
}

/* Add some padding to a few of the boxes to see how they line up when using align-items */
.box2 {
  padding-bottom: 200px;
}

.box6 {
  padding-bottom: 0;
}

.box9 {
  padding-bottom: 30px;
}

/* Override the align-items for these particular boxes and align them individually. */
.box3 {
  align-self: center;
}

.box5 {
  align-self: stretch;
}

.box7 {
  align-self: flex-end;
}